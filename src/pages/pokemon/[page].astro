---
import PokemonLayout from '@/layouts/pokemonLayout.astro';
import Card from '@/components/Card.astro';

export const getStaticPaths = async ({ paginate }) => {
  const res = await fetch('https://pokeapi.co/api/v2/pokemon?limit=1279');
  const result = await res.json();
  const data = result.results;

  return paginate(data, { pageSize: 49 });
};

const { page } = Astro.props;
---

<PokemonLayout>
  <div slot='pageControl' class='flex gap-8'>
    <a
      href='/pokemon/1'
      class={`btn ${page.currentPage !== 1 ? 'btn-secondary' : 'btn-disabled'}`}
      >First</a
    >
    <a href={page.url.prev} class='btn btn-primary'>Prev</a>
    <div class='flex items-center gap-8'>
      <h1>Page {page.currentPage} of {page.lastPage}</h1>
    </div>
    <a href={page.url.next} class='btn btn-primary'>Next</a>
    <a
      href={`/pokemon/${page.lastPage}`}
      class={`btn ${
        page.currentPage !== page.lastPage ? 'btn-secondary' : 'btn-disabled'
      }`}>Last</a
    >
  </div>
  {
    page.data
      ? page.data.map((pokemon, index) => {
          let pokemonID = page.start + index + 1;
          if (pokemonID >= 1009) {
            pokemonID = pokemonID + 8992;
          }
          return (
            <Card
              image={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemonID}.png`}
              pokemonName={
                pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)
              }
            />
          );
        })
      : null
  }
</PokemonLayout>
